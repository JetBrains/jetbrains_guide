- label: completion
  title: Completion
  subtitle: Learning resources when using completion in ReSharper or Rider
  accent: primary
  icon: fas fa-clipboard-list
  body: |
    Completion is what makes IDEs stand-out from basic text editors.

    ## See Also
    - [ReSharper - Code Completion](https://www.jetbrains.com/resharper/features/code_completion.html)
    - [Rider - Code Completion (IntelliSense)](https://www.jetbrains.com/help/rider/Auto-Completing_Code.html)

- label: editing
  title: Editing
  subtitle: Learning resources when writing code in the ReSharper and Rider editor
  accent: primary
  icon: fas fa-user-edit
  body: |
    Editing code is the primary activity in an IDE.

    ## See Also
    - [ReSharper - Code Generation](https://www.jetbrains.com/help/resharper/Code_Generation__Index.html)
    - [Rider - Creating and Editing Code](https://www.jetbrains.com/help/rider/Creating_and_Editing_Code.html)

- label: debugging
  title: Debugging
  subtitle: Investigate errors and trace code execution with our visual debugger.
  accent: primary
  icon: fas fa-bug
  body: |
    Rider's top feature is its powerful, visual debugger. Useful for finding
    problems in your code and poking and exploring code execution.

    ## See Also:
    - [Working with Run/Debug Configurations](https://www.jetbrains.com/help/rider/Run_Debug_Configuration.html)
    - [Running and debugging a .NET project](https://blog.jetbrains.com/dotnet/2017/08/21/running-debugging-net-project-rider/)
    - [Run/debug configurations](https://blog.jetbrains.com/dotnet/2017/08/23/rundebug-configurations-rider/)
    - [Advanced debugging with breakpoints](https://blog.jetbrains.com/dotnet/2017/08/28/rider-advanced-debugging-breakpoints/)

- label: running
  title: Running
  subtitle: Run your code in our configurable, visual run tool.
  accent: primary
  icon: fas fa-play
  body: |
    Writing .NET applications means running code. Rider helps with launching our applications!
    Code executes in our run tool window, driven by configurations you can edit.

    ## See Also
    - [Working with Run/Debug Configurations](https://www.jetbrains.com/help/rider/Run_Debug_Configuration.html)
    - [Running and debugging a .NET project](https://blog.jetbrains.com/dotnet/2017/08/21/running-debugging-net-project-rider/)
    - [Run/debug configurations](https://blog.jetbrains.com/dotnet/2017/08/23/rundebug-configurations-rider/)
    - [Advanced debugging with breakpoints](https://blog.jetbrains.com/dotnet/2017/08/28/rider-advanced-debugging-breakpoints/)

- label: inspections
  title: Inspections
  subtitle: Analyzing source code for common mistakes and potential improvements.
  accent: primary
  icon: fas fa-search
  body: |
    ReSharper and Rider help you analyze code on various levels, starting from a single statement in the editor
    and all the way through to the architecture of your entire solution.

    ## See Also
    - [ReSharper - Code Analysis](https://www.jetbrains.com/help/resharper/Code_Analysis__Index.html)
    - [Rider - Code Analysis](https://www.jetbrains.com/help/rider/Code_Analysis__Index.html)

- label: navigation
  title: Navigation
  subtitle: Productive ways to move around in your project.
  accent: primary
  icon: fas fa-map-marked
  body: |
    ReSharper and Rider help youto find your way through the source code using the declarations, members, method calls, inheritance hierarchy, errors, and so on - as well as through IDE items like actions, settings, and tool windows.

    ## See Also
    - [ReSharper - Navigate and Search](https://www.jetbrains.com/help/resharper/Navigation_and_Search__Index.html)
    - [Rider - Navigate and Search](https://www.jetbrains.com/help/rider/Navigation_and_Search__Index.html))

- label: ide
  title: IDE
  subtitle: Become more productive with general IDE tips and features.
  accent: primary
  icon: far fa-lightbulb
  body: |
    ReSharper and Rider help you write better code, faster. In this topic, we will look at general tips and features, and learn more about them.

    ## See Also
    - [ReSharper - Introduction](https://www.jetbrains.com/help/resharper/Introduction__Index.html)
    - [Rider - Introduction](https://www.jetbrains.com/help/rider/Introduction__Index.html)
    - [JetBrains tools for .NET developers](https://www.jetbrains.com/dotnet/)
    - [Rider - Cross-platform .NET IDE](https://www.jetbrains.com/rider/)

- label: gaming
  title: Gaming
  subtitle: A smarter way to write code for games.
  accent: primary
  icon: fas fa-gamepad
  body: |
    JetBrains Rider provides powerful support for game developers.

    Support for Unity includes: Unity-specific quick fixes, context actions and inspections, code completion and syntax highlighting in shader files, debugging Unity scripts, running and debugging Unity tests, profiling Unity games, refreshing assets, and much more.

    ## See Also
    - [Rider - Unity](https://www.jetbrains.com/unity/)
    - [Rider - Working with Unity](https://www.jetbrains.com/help/rider/Unity.html)

- label: vcs
  title: Version Control
  subtitle: Integrated, visual version control across your project.
  accent: primary
  icon: fas fa-code-branch
  body: |
    Working with version control systems (VCS) such as Git, Mercurial, and others is an integral part of development. Rider puts a common abstraction atop each system, then puts a visual face on all your VCS activities.

    ## See Also
    - [Rider - Version Control Integration](https://www.jetbrains.com/help/rider/Version_Control_Integration.html)
    - [Rider - Using Git](https://www.jetbrains.com/help/rider/Using_Git_Integration.html)
    - [Rider - Local History](https://www.jetbrains.com/help/rider/local_history.html)